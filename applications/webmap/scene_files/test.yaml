sources:
    osm:
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=mapzen-QF1osLn
        max_zoom: 16
        rasters: [normals]
    normals:
        type: Raster
        url: https://tile.mapzen.com/mapzen/terrain/v1/normal/{z}/{x}/{y}.png?api_key=mapzen-QF1osLn
        max_zoom: 15

styles:
    terrain-envmap:
        base: raster
        raster: normal
        lighting: false
        shaders:
            uniforms:
                u_scale: .15
                u_envmap: ../imhof5_Test.jpg
            blocks:
                global: |
                    // Simplified view-independent environment map
                    vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal) {
                        const vec3 eye = vec3(0.,0.,-1.);
                        vec3 r = reflect(eye, _normal);
                        r.z += 1.0;
                        float m = 2. * length(r);
                        vec2 uv = r.xy / m + .5;
                        return texture2D(_tex, uv);
                    }
                color: |
                    normal.z *= u_scale;
                    normal = normalize(normal);
                    color = applyEnvmap(u_envmap, normal);
    fadeterrain:
        base: raster
        mix: terrain-envmap
        shaders:
            blocks:
                color: |
                    color = color*vec4(1.5);
    dots:
        base: lines
        dash: [1, 2]

# lights:
#     directional1:
#         type: directional
#         direction: [1,-.5, -.5]
#         diffuse: '#00482f'
#     directional2:
#         type: directional
#         direction: [-1, -.4, -.5]
#         specular: [1,1,1]
#         diffuse: '#535353'
#     point1:
#         type: point
#         position: [1,1,2.4]
#         ambient: [0.07,0.07,0.07]
#         diffuse: [0.01,0.01,0.01]
#         specular: .5

# lights:
#     light1:
#         type: directional
#         direction: [0, 1, -.5]
#         diffuse: .3
#         ambient: 1

# styles:
#     terrain-envmap:
#         base: raster
#         raster: normal
#         shaders:
#             uniforms:
#                 u_scale: .05
#                 u_envmap: imhof5_1.jpg
#             blocks:
#                 global: |
#                     // Simplified view-independent environment map
#                     vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal) {
#                         const vec3 eye = vec3(0.,0.,-1.);
#                         vec3 r = reflect(eye, _normal);
#                         r.z += 20.0;
#                         float m = 2. * length(r);
#                         vec2 uv = r.xy / m + .5;
#                         return texture2D(_tex, uv);
#                     }
#                 color: |
#                     normal.z *= u_scale;
#                     normal = normalize(normal);
#                     color = applyEnvmap(u_envmap, normal);

layers:
    terrain:
        data: { source: normals, layer: _default }
        draw:
            terrain-envmap:
                order: 0
    earth:
        data: { source: osm }
        draw:
            lines:
                order: 1
                color: '#7F7F7F'
                width: 1px
    boundaries:
      data: {source: osm}
      filter:
        admin_level: [2]
      draw:
        dots:
          color: '#4C4C4C'
          width: 1px
    water:
        data: {source: osm}
        filter:
          $zoom: {min: 6, max: 16}
        draw:
            polygons:
                order: 2
                color: '#000000'
    roads:
      data: {source: osm}
      filter:
        kind: [major_road]
      draw:
        lines:
          order: 3
          color: '#404040'
          width: 1px
